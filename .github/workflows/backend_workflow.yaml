
on:
  push:
    branches:
      - main
    paths:
      - 'Backend_app/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Backend_app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #-----------------------------------------------------------------------------------------
      #-----------DEPLOY APPLICATION TO AWS LAMBDA ---------------------------------------------
      #-----------------------------------------------------------------------------------------

      - name: Package application code
        run: |
          zip -r deployment_package.zip . -x "tests/*" -x "requirements.txt"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://deployment_package.zip
      
      #-----------------------------------------------------------------------------------------
      #-----------DEPLOY AWS LAMBDA LAYER ONLY IF REQUIREMENTS.TXT HAS CHANGED------------------
      #-----------------------------------------------------------------------------------------
      - name: Check if requirements.txt changed
        id: check_req
        run: |
          git fetch origin main --depth=2 || true
          echo "changed=$(git diff --name-only HEAD^ HEAD | grep -q '^Backend_app/requirements\.txt$' && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Set up Python
        if: steps.check_req.outputs.changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies for Lambda Layer
        if: steps.check_req.outputs.changed == 'true'
        run: |
          mkdir -p python
          pip install -r requirements.txt -t python/

      - name: Zip Lambda Layer
        if: steps.check_req.outputs.changed == 'true'
        run: |
          zip -r layer_package.zip python
      
      - name: Publish Lambda Layer
        if: steps.check_req.outputs.changed == 'true'
        id: publish-layer
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name ${{ secrets.DEPENDENCIES_LAYER_NAME }} \
            --zip-file fileb://layer_package.zip \
            --compatible-runtimes python3.11 \
            --query Version --output text)
          echo "layer_version=$LAYER_VERSION" >> $GITHUB_ENV

      - name: Deploy Lambda function
        if: steps.check_req.outputs.changed == 'true'
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --layers arn:aws:lambda:sa-east-1:${{ secrets.AWS_ACCOUNT_ID }}:layer:${{ secrets.DEPENDENCIES_LAYER_NAME }}:${{ env.layer_version }}

